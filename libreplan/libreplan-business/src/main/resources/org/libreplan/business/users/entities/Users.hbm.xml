<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="org.libreplan.business.users.entities" default-access="field">
    <!-- IMPORTANT: The default name for User's table ("User") is not valid for some databases (e.g. PostgreSQL). -->
    <class name="User" table="user_table">

        <!-- IMPORTANT: type="long" must be specified (otherwise, Hibernate infers type="integer"). -->
        <id name="id" access="property" type="long">
            <generator class="increment">
                <param name="max_lo">100</param>
            </generator>
        </id>

        <version name="version" access="property" type="long" />

        <property name="loginName" not-null="true" unique="true" column="login_name" />

        <property name="password" />

        <property name="email"/>

        <property name="disabled"/>

        <property name="librePlanUser" column="libreplan_user" not-null="true"/>

        <property name="applicationLanguage" column="application_language">
            <type name="org.hibernate.type.EnumType">
                <param name="enumClass">org.libreplan.business.settings.entities.Language</param>
            </type>
        </property>

        <property name="expandCompanyPlanningViewCharts" not-null="true" column="expand_company_planning_view_charts" />

        <property name="expandOrderPlanningViewCharts" not-null="true" column="expand_order_planning_view_charts" />

        <property name="expandResourceLoadViewCharts" not-null="true" column="expand_resource_load_view_charts" />

        <property name="firstName" column="first_name"/>

        <property name="lastName" column="last_name"/>

        <!-- Index created in a database-object section -->
        <set name="roles" table="roles_table" lazy="false">
            <key column="user_id"/>
            <element column="role">
                <type name="org.hibernate.type.EnumType">
                    <param name="enumClass">org.libreplan.business.users.entities.UserRole</param>
                    <param name="useNamed">true</param>
                </type>
            </element>
        </set>

        <!-- Index created in a database-object section -->
        <set name="profiles" table="user_profiles" lazy="false">
            <key column="user_id"/>
            <many-to-many column="profile_id" class="org.libreplan.business.users.entities.Profile"/>
        </set>

        <many-to-one name="lastConnectedScenario" class="org.libreplan.business.scenarios.entities.Scenario" />

        <one-to-one name="worker" property-ref="user" class="org.libreplan.business.resources.entities.Worker" />

        <property name="projectsFilterPeriodSince" column="projects_filter_period_since"/>

        <property name="projectsFilterPeriodTo" column="projects_filter_period_to"/>

        <property name="projectsFilterFinishedOn" column="projects_filter_finished_on"/>

        <property name="resourcesLoadFilterPeriodSince" column="resources_load_filter_period_since"/>

        <property name="resourcesLoadFilterPeriodTo" column="resources_load_filter_period_to"/>

        <property name="showResourcesOn" column="show_resources_on"/>

        <property name="showAdvancesOn" column="show_advances_on"/>

        <property name="showReportedHoursOn" column="show_reported_hours_on"/>

        <property name="showLabelsOn" column="show_labels_on"/>

        <property name="showMoneyCostBarOn" column="show_money_cost_bar_on"/>

        <many-to-one name="projectsFilterLabel" cascade="none" lazy="false" column="projects_filter_label_id" />

        <many-to-one name="resourcesLoadFilterCriterion" cascade="none" lazy="false"
                     column="resources_load_filter_criterion_id" />

    </class>

    <class name="Profile" table="profile_table">
        <id name="id" access="property" type="long">
            <generator class="increment">
                <param name="max_lo">100</param>
            </generator>
        </id>

        <version name="version" access="property" type="long" />

        <property name="profileName" not-null="true" unique="true" column="profile_name" />

        <!-- Index created in a database-object section -->
        <set name="roles" table="profile_roles" lazy="false">
            <key column="profile_id"/>
            <element column="role">
                <type name="org.hibernate.type.EnumType">
                    <param name="enumClass">org.libreplan.business.users.entities.UserRole</param>
                    <param name="useNamed">true</param>
                </type>
            </element>
        </set>
    </class>

    <class name="OrderAuthorization" table="order_authorization">
        <id name="id" access="property" type="long">
            <generator class="increment">
                <param name="max_lo">100</param>
            </generator>
        </id>

        <discriminator column="order_authorization_subclass" type="string"/>

        <version name="version" access="property" type="long" />

        <property name="authorizationType" not-null="true" column="authorization_type">
            <type name="org.hibernate.type.EnumType">
                <param name="enumClass">org.libreplan.business.users.entities.OrderAuthorizationType</param>
                <param name="useNamed">true</param>
            </type>
        </property>

        <many-to-one name="order" class="org.libreplan.business.orders.entities.Order" column="order_id" />

        <subclass name="UserOrderAuthorization" discriminator-value="user">
            <many-to-one name="user" class="User" column="user_id" />
        </subclass>

        <subclass name="ProfileOrderAuthorization" discriminator-value="profile">
            <many-to-one name="profile" class="Profile" column="profile_id" />
        </subclass>

    </class>

    <!-- Index to boost the search of roles inside users -->
    <database-object>
        <create>CREATE INDEX idx_user_on_user_roles ON user_roles (user_id)</create>
        <drop>DROP INDEX idx_user_on_user_roles</drop>
        <dialect-scope name="org.hibernate.dialect.PostgreSQL9Dialect" />
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect" />
    </database-object>

    <!-- Index to boost the search of roles inside profiles -->
    <database-object>
        <create>CREATE INDEX idx_profile_on_profile_roles ON profile_roles (profile_id)</create>
        <drop>DROP INDEX idx_profile_on_profile_roles</drop>
        <dialect-scope name="org.hibernate.dialect.PostgreSQL9Dialect" />
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect" />
    </database-object>

    <!-- Index to boost the search of profiles inside users -->
    <database-object>
        <create>CREATE INDEX idx_user_on_user_profiles ON user_profiles (user_id)</create>
        <drop>DROP INDEX idx_user_on_user_profiles</drop>
        <dialect-scope name="org.hibernate.dialect.PostgreSQL9Dialect" />
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect" />
    </database-object>
</hibernate-mapping>
